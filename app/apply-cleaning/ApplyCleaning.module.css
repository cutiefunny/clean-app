/* app/apply-cleaning/ApplyCleaning.module.css */
.pageContainer {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background-color: #f0f0f5; /* 페이지 전체 배경색 */
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    max-width: 600px; /* 모바일에서의 최대 너비 */
    margin: 0 auto; /* 중앙 정렬 */
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 12px 16px;
  background-color: #ffffff;
  border-bottom: 1px solid #e0e0e0;
  position: sticky;
  top: 0;
  z-index: 10;
}

.backButton {
  font-size: 24px;
  color: #333;
  background: none;
  border: none;
  cursor: pointer;
  padding: 8px;
  margin-left: -8px;
}

.pageTitle {
  font-size: 18px;
  font-weight: bold;
  color: #333;
  margin: 0;
  position: absolute; /* 중앙 정렬을 위해 */
  left: 50%;
  transform: translateX(-50%);
}

.stepIndicator {
  font-size: 1rem;
  font-weight: 500;
  color: #555;
}

.contentArea {
  flex-grow: 1; /* Header2와 stepProgressContainer를 제외한 나머지 모든 세로 공간을 차지 */
  display: flex;  /* 자식 요소(활성화된 Step 컴포넌트)가 높이를 100% 사용할 수 있도록 */
  flex-direction: column; /* 자식 요소를 수직으로 쌓음 (실제로는 하나의 Step만 렌더링) */
  overflow: hidden; /* 이중 스크롤바 방지 (Step 컴포넌트가 자체 스크롤 처리) */
  padding: 0 16px 16px 16px; /* 페이지 좌우, 하단 여백. 상단 여백은 stepProgressContainer에 있을 수 있음 */
                             /* 또는 padding: 0; 으로 하고 각 Step 컴포넌트에서 전체적인 margin/padding 관리 */
  height: 100%; /* 부모 요소의 높이를 100%로 설정하여 자식 요소가 전체 공간을 차지하도록 */
}

.stepContainer {
  background-color: #ffffff;
  /* padding: 24px 20px; */
  border-radius: 12px;
  /* box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05); */
}

.formGroup {
  margin-bottom: 20px;
}

.label {
  display: block;
  font-size: 1rem;
  font-weight: 600;
  color: #444;
  margin-bottom: 12px;
}

.inputField,
.selectField {
  width: 100%;
  border: 1px solid #ccc;
  border-radius: 8px;
  font-size: 1rem; /* 16px 정도 */
  box-sizing: border-box; /* 패딩과 테두리를 포함하여 크기 계산 */
  font-family: inherit;
  background-color: #fff;
  color: #333;

  /* 높이와 수직 정렬을 위한 핵심 속성 */
  height: 48px; /* 원하는 전체 높이 (예: 48px) */
  padding-top: 0;    /* 상하 패딩은 line-height로 중앙 정렬을 시도하므로 0으로 설정 */
  padding-bottom: 0; /* 또는 작은 값으로 설정 후 line-height 미세조정 */
  padding-left: 12px;  /* 좌측 패딩 */
  /* line-height: 46px; */
}
/* 포커스 스타일 (일관성) */
.inputField:focus,
.selectField:focus {
  border-color: #2DA3E3;
  outline: none;
  box-shadow: 0 0 0 2px rgba(47, 128, 237, 0.2);
}

.selectField {
  appearance: none; /* 브라우저 기본 스타일 제거 */
  -webkit-appearance: none;
  -moz-appearance: none;
  
  background-image: url("/images/chevron-down.png"); /* public/images/chevron-down.png 에 이미지 위치 */
  background-repeat: no-repeat;
  background-position: right 12px center; /* 화살표 아이콘 위치 */
  background-size: 16px 16px; /* 화살표 아이콘 크기 (1em 대신 명시적 크기 권장) */
  
  padding-right: 40px; /* 커스텀 화살표와 텍스트 간의 충분한 여백 확보 */
}

/* 날짜 입력 필드를 감싸는 컨테이너 */
.dateInputContainer {
  position: relative; /* 내부 아이콘의 absolute 포지셔닝 기준점 */
  width: 100%;
}

.step1Date {
    /* 기존의 .inputField 로부터 상속받는 스타일들 (height, padding-left 등) */
    /* 예: composes: inputField; (CSS Modules 기능) 또는 클래스 다중 적용 */
    
    padding-right: 40px; /* 커스텀 아이콘을 위한 공간 확보 */

    /* 브라우저 기본 appearance 최대한 제거 시도 */
    -webkit-appearance: none; /* Chrome, Safari, Edge, Opera */
    -moz-appearance: textfield; /* Firefox에서 아이콘을 포함한 기본 UI를 텍스트 필드처럼 변경 */
    appearance: none; /* 표준 속성 */

    background-color: #fff;
}

/* 화살표 숨기기 (IE, Edge) */
.step1Date::-ms-clear {
    display: none; /* input[type=date]의 X 버튼 제거 */
}
.step1Date::-webkit-calendar-picker-indicator {
    color: rgba(0, 0, 0, 0);
    opacity: 1;
    background-image: url(/images/calendar.png);
    background-repeat: no-repeat;
    background-position: center;
    background-size: 20px;
    cursor: pointer;
    width: 20px;
    height: 20px;
    padding: 3px;
}

.calendarIcon {
  position: absolute;
  top: 50%;
  right: 16px; /* 아이콘의 오른쪽 여백 */
  transform: translateY(-50%);
  pointer-events: none; /* 아이콘이 입력 필드 클릭을 방해하지 않도록 */
  z-index: 1; /* 입력 필드보다 위에 표시되도록 */

  /* 기존 텍스트 아이콘 스타일 제거 또는 주석 처리 */
  /* font-size: 1.2rem; */
  /* color: #777; */

  /* 새 이미지 아이콘 스타일 */
  width: 20px;  /* 아이콘 이미지의 너비 */
  height: 20px; /* 아이콘 이미지의 높이 */
  background-image: url("/images/calendar.png"); /* public 폴더 기준 경로 */
  background-repeat: no-repeat;
  background-position: center; /* 이미지를 span 중앙에 위치 */
  background-size: contain;    /* 이미지가 span 영역에 맞게 비율 유지하며 채움 */
                               /* 또는 background-size: 20px 20px; 와 같이 고정 크기 지정 가능 */
}

.radioGroup {
  display: flex;
  gap: 10px;
  flex-wrap: wrap; /* 화면 작을 때 줄바꿈 */
}

.radioLabel {
  display: flex;
  align-items: center;
  padding: 10px 15px;
  border: 1px solid #ddd;
  border-radius: 6px;
  cursor: pointer;
  font-size: 0.95rem;
  transition: border-color 0.2s, background-color 0.2s;
}
.radioLabel:has(input:checked) {
  border-color: #2DA3E3;
  background-color: #e9f2ff;
}
.radioLabel input[type="radio"] {
  margin-right: 8px;
}

.nextButton {
    width: 100%;
    padding: 12px;
    background-color: #2DA3E3;
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 1.05rem;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.2s;
    position: sticky;
    bottom: 20px; /* Adjust the value as needed */
    margin-top: 20px; /* Optional: Add some space between the content and the button */
}

.nextButton:hover {
  background-color: #2DA3E3;
}

.placeholderText {
    text-align: center;
    color: #777;
    padding: 20px;
}

.stepTitle { /* 각 스텝의 소제목 */
  font-size: 1.2rem;
  font-weight: 600;
  color: #333;
  margin-bottom: 20px;
  text-align: center;
}

.radioGroupVertical { /* 세로 정렬 라디오 그룹 */
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.radioLabelFullWidth { /* 전체 너비 차지하는 라디오 라벨 */
  display: flex;
  align-items: center;
  padding: 12px 15px;
  border: 1px solid #ddd;
  border-radius: 8px;
  cursor: pointer;
  font-size: 0.95rem;
  transition: border-color 0.2s, background-color 0.2s;
}
.radioLabelFullWidth:has(input:checked) {
  border-color: #2DA3E3;
  background-color: #e9f2ff;
}
.radioLabelFullWidth input[type="radio"] {
  margin-right: 10px;
}

.quantityInputGroup {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 0;
  border-bottom: 1px solid #f0f0f0; /* 각 항목 구분선 */
}
.quantityInputGroup:last-of-type { /* 마지막 항목은 구분선 제거 */
    /* border-bottom: none; */ /* 추가요청사항 위에 구분선이 필요할 수 있음 */
}


.quantityLabel {
  font-size: 1rem;
  color: #333;
}

.quantityControls {
  display: flex;
  align-items: center;
  gap: 12px;
}

.quantityButton {
  background-color: #e9ecef;
  color: #495057;
  border: 1px solid #ced4da;
  width: 32px;
  height: 32px;
  border-radius: 50%; /* 원형 버튼 */
  font-size: 1.2rem;
  font-weight: bold;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
  line-height: 1; /* 버튼 내 텍스트 수직 정렬 */
  transition: background-color 0.2s;
}
.quantityButton:hover:not(:disabled) {
  background-color: #dee2e6;
}
.quantityButton:disabled {
    background-color: #f8f9fa;
    color: #adb5bd;
    cursor: not-allowed;
}


.quantityValue {
  font-size: 1.1rem;
  font-weight: 500;
  min-width: 20px; /* 숫자 표시 공간 확보 */
  text-align: center;
}

.textareaField { /* 이미 정의되어 있다면 수정 또는 그대로 사용 */
  width: 100%;
  padding: 12px;
  border: 1px solid #ccc;
  border-radius: 6px;
  font-size: 1rem;
  box-sizing: border-box;
  font-family: inherit;
  resize: vertical;
  min-height: 100px;
}

.summarySection {
  border: 1px solid #e0e0e0;
  border-radius: 8px;
  padding: 16px;
  margin-bottom: 24px;
  background-color: #f8f9fa;
}

.summaryItem {
  font-size: 0.95rem;
  color: #333;
  padding: 8px 0;
  border-bottom: 1px dashed #e0e0e0; /* 점선 구분 */
  display: flex; /* 레이블과 값 정렬 */
}
.summaryItem:last-child {
  border-bottom: none;
}

.summaryLabel {
  font-weight: 500;
  color: #555;
  width: 100px; /* 레이블 너비 고정 */
  flex-shrink: 0; /* 너비 유지 */
}

.preText { /* 추가 요청사항의 줄바꿈 유지를 위해 */
    white-space: pre-wrap;
    font-family: inherit;
    margin: 0;
    font-size: 0.95rem;
    color: #333;
}

.loadingContainer { /* 로딩 중일 때 전체 페이지 레이아웃을 비슷하게 유지 */
  display: flex;
  flex-direction: column;
  min-height: 100vh; /* pageContainer와 유사하게 */
}

.loadingText {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-grow: 1;
  font-size: 1.2rem;
  color: #555;
  padding: 20px;
}

.locationSelectContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 20px;
  margin-bottom: 40px; /* "다음" 버튼과의 간격 조정 */
  width: 100%; /* 컨테이너가 부모 너비를 차지하도록 */
}

.locationIcon {
  margin-right: 8px;
  font-size: 1.2rem;
}

.stepProgressContainer {
  width: 100%;
  padding: 12px 20px; /* 위아래 패딩을 좀 더 주어 알약 모양이 잘 보이도록 */
  background-color: #ffffff; /* 또는 페이지 배경색 (#f0f0f5)과 동일하게 할 수도 있음 */
  /* border-bottom: 1px solid #f0f0f0; */ /* 구분선은 필요에 따라 */
  box-sizing: border-box;
  text-align: left; /* 내부 요소 왼쪽 정렬 */
}

.stepProgressText { /* 이 클래스가 알약 모양의 스타일을 가집니다. */
  display: inline-block; /* 배경색과 패딩이 적용되도록 inline-block으로 변경 */
  padding: 6px 16px;     /* 알약 내부의 텍스트 여백 */
  
  /* 배경색: #2DA3E3의 10% 투명도 */
  /* HEXA (RGBA): #2DA3E3에 10% alpha는 1A (16진수 26에 해당, 255 * 0.1 = 25.5) */
  /* 하지만 CSS에서 HEXA는 #RRGGBBAA 순서이므로, #2DA3E31A 가 맞습니다. */
  background-color: #2DA3E31A; /* #2DA3E3 색상에 alpha 10% */
  /* 또는 rgba(45, 163, 227, 0.1) 와 같이 사용 가능 */

  color: #2DA3E3;          /* 텍스트 색상 */
  
  border-radius: 50px;     /* 충분히 큰 값을 주어 알약 모양 생성 */
  font-size: 0.85rem;      /* 폰트 크기 (조절 가능) */
  font-weight: 600;        /* 폰트 굵기 (조절 가능) */
  line-height: 1.2;        /* 줄 높이 (패딩과 함께 알약 세로 크기 조절) */
  text-align: center;      /* 알약 내부 텍스트 중앙 정렬 (필수는 아님) */
}

.contentArea {
  flex-grow: 1;
  padding: 16px;
  overflow-y: auto;
}

.stepContainer {
  background-color: #ffffff;
  padding: 24px 20px;
}

.stepTitle {
  font-size: 1.2rem;
  font-weight: 600;
  color: #333;
  margin-bottom: 20px;
  /* text-align: center; */ /* 각 스텝의 제목 정렬 */
}

.formContainerWithFixedFooter {
  display: flex;
  flex-direction: column;
  min-height: 100vh; /* 전체 뷰포트 높이 */
  max-width: 600px; /* 모바일에서의 최대 너비 */
  margin: 0 auto; /* 중앙 정렬 */
}

/* Header2와 stepProgressContainer는 이 컨테이너의 자식으로 정상 배치됨 */

.scrollableContentArea {
  flex-grow: 1; /* Header, StepProgress, Footer를 제외한 모든 공간 차지 */
  overflow-y: auto; /* 내용이 길면 스크롤 */
  /* 중요: 하단 고정 푸터의 높이만큼 아래쪽 패딩을 주어 내용이 가려지지 않도록 함 */
  padding-bottom: 100px; /* .fixedButtonFooter의 대략적인 높이 + 여유 공간 */
  background-color: #fff; /* 스크롤 영역의 배경색 */
  max-width: 600px; /* 필요시 최대 너비 설정 */
}

.stepContainer { /* 각 Step 컴포넌트의 루트 div에 적용될 스타일 */
  background-color: #ffffff;
  padding: 24px 20px;
  border-radius: 12px;
  /* box-shadow: 0 1px 3px rgba(0, 0, 0, 0.05); */
  /* margin-bottom: 16px; */ /* 여러 스텝이 한 화면에 보이지 않으므로 불필요 */
}


.fixedButtonFooter {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: #ffffff;
  padding: 16px 20px;
  /* box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1); */
  z-index: 100;
  display: flex;
  justify-content: center;
  max-width: 600px; /* 필요시 최대 너비 설정 */
    margin: 0 auto; /* 중앙 정렬 */
}

.footerButton {
  width: 100%;
  /* max-width: 400px; */ /* 필요시 최대 너비 설정 */
  padding: 14px;
  background-color: #2DA3E3;
  color: white;
  border: none;
  border-radius: 8px;
  font-size: 1.05rem;
  font-weight: bold;
  cursor: pointer;
  transition: background-color 0.2s;
}
.footerButton:hover:not(:disabled) {
  background-color: #adb5bd;
}
.footerButton:disabled {
  background-color: #cccccc;
  color: #666666;
  cursor: not-allowed;
}

.searchAddressButton {
  padding: 0 15px;
  background-color: #6c757d;
  color: white;
  border: none;
  border-radius: 6px;
  font-size: 0.9rem;
  cursor: pointer;
  white-space: nowrap;
}
.searchAddressButton:hover {
  background-color: #5a6268;
}
.inputHelperText {
  font-size: 0.8rem;
  color: #666;
  margin-top: 6px;
}

.radioGroup {
  display: flex;
  gap: 8px; /* 버튼 간 간격 */
  flex-wrap: wrap;
}

/* 기존 .radioLabel은 .radioLabelAsButton으로 변경 또는 새 클래스 생성 */
.radioLabelAsButton {
  display: inline-block; /* 버튼처럼 보이도록 */
  flex: 1; /* 가능한 공간을 균등하게 차지 (선택 사항) */
  min-width: 80px; /* 최소 너비 (선택 사항) */
  padding: 16px 12px;
  border: 1px solid #ddd;
  border-radius: 8px; /* 이미지와 유사한 둥근 모서리 */
  background-color: #ffffff; /* 기본 배경색 */
  color: #999999; /* 기본 글자색 */
  font-size: 0.95rem;
  cursor: pointer;
  text-align: center;
  transition: all 0.2s ease-in-out;
  user-select: none; /* 텍스트 선택 방지 */
  position: relative; /* 내부 input을 absolute로 배치하기 위함은 아님 (숨기기 방식 사용) */
  font-family: 'Pretendard';
  font-weight: 600;
  font-size: 0.9rem;
  line-height: 100%;
  letter-spacing: 0%;
}

/* .radioLabelAsButton:hover {
  border-color: #2DA3E3;
  border-width: 2px;
  background-color: #ffffff;
} */

/* 실제 라디오 버튼(동그라미) 숨기기 */
.hiddenRadioInput {
  opacity: 0;
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

/* 선택된 라디오 버튼의 레이블(버튼) 스타일 */
.radioLabelActive {
  border-color: #2DA3E3;       /* 이미지의 활성화된 버튼 테두리 색상 */
  background-color: #ffffff;  /* 이미지의 활성화된 버튼 배경 색상 */
  color: #2DA3E3;             /* 이미지의 활성화된 버튼 텍스트 색상 */
  font-weight: 600;           /* 선택 시 약간 더 굵게 (선택 사항) */
}

.step1Date { /* 날짜 입력 필드에 오른쪽 패딩을 주어 아이콘 공간 확보 */
  width: 100%; /* inputField 기본 스타일과 충돌 방지 */
  box-sizing: border-box;
}

/* selectField 와 inputField 스타일은 기존 스타일 유지 또는 필요시 .step1Select 처럼 구체화 */
.selectField,
.inputField {
  width: 100%;
  padding: 12px;
  border: 1px solid #ccc;
  border-radius: 8px; /* 이미지와 유사한 둥근 모서리 */
  font-size: 1rem;
  box-sizing: border-box;
  font-family: inherit;
}
.selectField:focus,
.inputField:focus {
  border-color: #2DA3E3;
  outline: none;
  box-shadow: 0 0 0 2px rgba(47, 128, 237, 0.2);
}





/* #region step2 스타일 정의 */
.stepTitleSlim {
  font-size: 1.0rem; /* 기존 .stepTitle 보다 작게 */
  font-weight: 600;
  color: #444;
  margin-bottom: 12px; /* 버튼과의 간격 */
  /* text-align: left; */ /* 필요 시 */
}

.locationSelectButton {
  width: 100%;
  padding: 14px 16px;
  border: 2px solid #2DA3E3; /* 이미지의 파란색 테두리 */
  border-radius: 8px;
  background-color: #ffffff; /* 흰색 배경 */
  color: #2DA3E3; /* 파란색 텍스트 (선택된 지역 없을 때) */
  font-size: 1rem;
  font-weight: 500;
  text-align: left; /* 텍스트 왼쪽 정렬 */
  cursor: pointer;
  display: flex; /* 아이콘과 텍스트 정렬 */
  align-items: center;
  transition: background-color 0.2s ease;
  justify-content: center; /* 아이콘과 텍스트를 가로축 중앙으로 정렬 */
  border-radius: 10px;
}

.locationSelectButton:hover {
  background-color: #f0f8ff; /* 아주 연한 파란색 배경 */
}

/* #endregion step2 스타일 정의 */

/* #region step3 스타일 정의 */
/* 체크박스 그룹 스타일 */
.checkboxGroup {
  display: flex;
  flex-direction: column;
  gap: 12px; /* 체크박스 항목 간 간격 */
}

.checkboxLabel {
  display: flex; /* 체크박스와 텍스트 정렬 */
  align-items: center;
  padding: 5px 0; /* 위아래 패딩으로 간격 조절 */
  font-size: 0.85rem;
  color: #555555;
  cursor: pointer;
  user-select: none;
  position: relative; /* 커스텀 체크박스 위치 기준 */
  font-family: 'Pretendard';
  font-weight: 500;
  line-height: 100%;
  letter-spacing: 0%;

}

/* 기본 HTML 체크박스 숨기기 */
.checkboxInput {
  opacity: 0;
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0,0,0,0);
  border: 0;
}

/* 커스텀 체크박스 UI (네모 박스) */
.checkboxCustom {
  width: 20px;
  height: 20px;
  border: 2px solid #ccc; /* 테두리 색상 */
  border-radius: 4px; /* 모서리 둥글기 */
  margin-right: 10px;
  display: inline-block;
  position: relative; /* 내부 체크 표시 위치 기준 */
  background-color: #fff;
  transition: background-color 0.2s, border-color 0.2s;
}

/* 체크됐을 때 커스텀 체크박스 스타일 */
.checkboxInput:checked + .checkboxCustom {
    background-color: #ffffff; /* 이미지의 파란색 */
    border-color: #2DA3E3;
}

/* 체크 표시 (체크됐을 때 나타남) */
.checkboxInput:checked + .checkboxCustom::after {
    content: '';
    position: absolute;
    left: 50%;
    top: calc(50% - 2px); /* 2픽셀 위로 조정 */
    width: 5px;
    height: 10px;
    border: solid #2DA3E3;
    border-width: 0 2px 2px 0;
    transform: translate(-50%, -50%) rotate(45deg);
}
/* step3 스타일 정의 끝 #endregion */

/* #region step5 스타일 정의 */
.charCount {
  text-align: right;
  font-size: 0.8rem;
  color: #888;
  margin-top: 4px;
}

.sectionDivider {
  height: 1px;
  background-color: #e0e0e0;
  margin: 24px 0;
}

.subSectionTitle {
  font-size: 1.1rem;
  font-weight: 600;
  color: #333;
  margin-bottom: 16px;
}

/* .phoneInputWrapper, .sendCodeButton 는 CheckModal.module.css 에서 가져오거나 유사하게 정의 */
.phoneInputWrapper { /* CheckModal의 스타일 재활용 또는 여기에 정의 */
  display: flex;
  gap: 8px;
}
.phoneInputWrapper .inputField {
  flex-grow: 1;
}
.sendCodeButton { /* CheckModal의 스타일 재활용 또는 여기에 정의 */
  padding: 0 15px; /* 높이는 inputField와 동일하게 설정됨 */
  background-color: #6c757d;
  color: white;
  border: none;
  border-radius: 6px;
  font-size: 0.9rem;
  cursor: pointer;
  white-space: nowrap;
  line-height: 46px; /* inputField height - 2*border */
  height: 48px;
}
.sendCodeButton:hover:not(:disabled) {
  background-color: #5a6268;
}
.sendCodeButton:disabled {
  background-color: #adb5bd;
  cursor: not-allowed;
}


.otpInputWrapper {
  display: flex;
  align-items: center;
  gap: 8px;
}

.otpInputWrapper .inputField {
  flex-grow: 1;
}

.timerText {
  font-size: 0.9rem;
  color: #dc3545; /* 빨간색 타이머 */
  font-weight: 500;
  min-width: 40px; /* 타이머 공간 확보 */
  text-align: center;
}

.verifyOtpButton {
  padding: 0 15px; /* 높이는 inputField와 동일하게 */
  background-color: #6c757d; /* 전송 버튼과 유사한 스타일 */
  color: white;
  border: none;
  border-radius: 6px;
  font-size: 0.9rem;
  cursor: pointer;
  white-space: nowrap;
  line-height: 46px;
  height: 48px;
}
.verifyOtpButton:hover:not(:disabled) {
  background-color: #5a6268;
}
.verifyOtpButton:disabled {
  background-color: #adb5bd;
  cursor: not-allowed;
}

.infoTextSmall { /* CheckModal의 .infoText 와 유사 */
  font-size: 0.8rem;
  color: #666;
  line-height: 1.4;
  margin-top: 12px;
  /* background-color: #f8f9fa; */
  /* padding: 8px; */
  /* border-radius: 4px; */
}

.errorMessage { /* CheckModal의 .errorMessage 와 유사 */
    color: red;
    font-size: 0.85rem;
    margin-top: 8px;
    /* text-align: center; */
}
.successMessage {
    color: green;
    font-size: 0.9rem;
    font-weight: 500;
    margin-top: 10px;
    /* text-align: center; */
}

/* Textarea와 글자 카운트를 감싸는 wrapper */
.textareaWrapper {
  position: relative; /* 자식 요소(.charCount)의 absolute 포지셔닝 기준점 */
  width: 100%;
}

.textareaField {
  width: 100%;
  padding: 12px;
  border: 1px solid #ccc;
  border-radius: 8px;
  font-size: 1rem;
  line-height: 1.6;
  resize: vertical;
  box-sizing: border-box;
  min-height: 120px; /* 기존 rows="6"과 유사한 높이 또는 필요에 따라 조절 */
  
  /* 중요: 글자 수 카운트가 텍스트를 가리지 않도록 하단 패딩 추가 */
  /* .charCount의 높이 + 약간의 여유 공간만큼 패딩을 줍니다. */
  padding-bottom: 30px; /* 예시 값, .charCount의 실제 높이에 맞춰 조절 */
}

.charCount {
  position: absolute; /* .textareaWrapper 내부에서 절대 위치 */
  bottom: 8px;        /* .textareaWrapper 하단에서 8px 위 (textarea 패딩 내부) */
  right: 12px;       /* .textareaWrapper 우측에서 12px 왼쪽 (textarea 패딩 내부) */
  font-size: 0.75rem; /* 글자 크기 */
  color: #888;       /* 글자 색상 */
  background-color: transparent; /* 기본적으로 textarea 배경색을 따름 */
  padding: 5px 5px;
  border-radius: 3px;
  pointer-events: none; /* 글자 수 카운트가 textarea 타이핑/클릭을 방해하지 않도록 */
  line-height: 1; /* 글자 수 표시가 한 줄로 깔끔하게 나오도록 */
}
/* step5 스타일 정의 끝 #endregion */